<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorks® NonCommercial, 7.4.1 of May 30, 2006 on April 30, 2023 at 7:31:36 pm</time-stamp>


<class>
<name>Letiste</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>kod nazev mesto </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letiste class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#kod -&gt; Core.String); add: (#nazev -&gt; Core.String); add: (#mesto -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Letiste</class-id>
<body>Atributy:
	- kod = kazde letiste ma trojmistny kod, například Letiště Václava Havla v Praze má kód PRG
	- nazev, mesto
Metody:
	- frekvenceLetu = vypocitava kolikrat se letiste objevilo v nejakem z letů a je jedno jestli to bylo letiště odkud se odlétalo nebo kam se přílétalo</body>
</comment>

<methods>
<class-id>Letiste</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="kod">kod
"generated by Daskalos"

     ^kod</body>

<body package="DaskalosUserClasses" selector="kod:">kod: anObject
"generated by Daskalos"

     kod := (self checkValue: anObject forVariable: #kod)</body>

<body package="DaskalosUserClasses" selector="mesto">mesto
"generated by Daskalos"

     ^mesto</body>

<body package="DaskalosUserClasses" selector="mesto:">mesto: anObject
"generated by Daskalos"

     mesto := (self checkValue: anObject forVariable: #mesto)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>
</methods>

<methods>
<class-id>Letiste</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     kod := nil.
     nazev := nil.
     mesto := nil.
</body>
</methods>

<methods>
<class-id>Letiste</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="frekvenceLetu">frekvenceLetu
	"vypocita v kolika letech se jednotliva letiste nachazeji (ze bud z letiste odleta nebo tam prileta)"

	^(Let allInstances select: [:e | e zLetiste = self]) size 
		+ (Let allInstances select: [:e | e naLetiste = self]) size</body>
</methods>


<class>
<name>Sedadlo</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>oznaceni trida uDveri </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Sedadlo class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#oznaceni -&gt; Core.String); add: (#trida -&gt; Core.String); add: (#uDveri -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Sedadlo</class-id>
<body>Atributy:
	- oznaceni = unikátní identifikátor místa - celkově jsem zjednodušil, protože každý model letadla má jiný počet a jiné rozložení sedadel - modely letadel apod jsem v projektu neřešil
	- trida = v jakem "vagonu" se místo nachází - čili economy, bussines, first class
	- uDveri = 0 nebo 1 podle toho, jestli se nachazi misto u dveri, nektere aerospolečnosti nedovolují nezletilím sedět u oken</body>
</comment>

<methods>
<class-id>Sedadlo</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="oznaceni">oznaceni
"generated by Daskalos"

     ^oznaceni</body>

<body package="DaskalosUserClasses" selector="oznaceni:">oznaceni: anObject
"generated by Daskalos"

     oznaceni := (self checkValue: anObject forVariable: #oznaceni)</body>

<body package="DaskalosUserClasses" selector="trida">trida
"generated by Daskalos"

     ^trida</body>

<body package="DaskalosUserClasses" selector="trida:">trida: anObject
"generated by Daskalos"

     trida := (self checkValue: anObject forVariable: #trida)</body>

<body package="DaskalosUserClasses" selector="uDveri">uDveri
"generated by Daskalos"

     ^uDveri</body>

<body package="DaskalosUserClasses" selector="uDveri:">uDveri: anObject
"generated by Daskalos"

     uDveri := (self checkValue: anObject forVariable: #uDveri)</body>
</methods>

<methods>
<class-id>Sedadlo</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     oznaceni := nil.
     trida := nil.
     uDveri := nil.
</body>
</methods>


<class>
<name>Cestujici</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni datumNarozeni stat cisloDokladu </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Cestujici class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#cisloDokladu -&gt; Core.Number); add: (#datumNarozeni -&gt; Core.Date); add: (#stat -&gt; Core.String); add: (#prijmeni -&gt; Core.String); add: (#jmeno -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Cestujici</class-id>
<body>Atributy:
	- jmeno, prijmeni, datumNarozeni, stat
	- cisloDokladu = tímto myslím číslo OP
Metody:
	- celkemUtraceno = vypočítávám celkovou částku, kterou cestující utratil za letenky u této společnosti - zjistím, jaké letenky patří k jednotlivým osobám a potom je sečtu
	- pocetLetenek = zjistím jaké letenky patří k jednotlivým osobám a potom pomocí size zjistím, kolik jich celkem cestující má
	- vek = vypočítám z místního atributu datum Narození k dnešnímu dni</body>
</comment>

<methods>
<class-id>Cestujici</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cisloDokladu">cisloDokladu
"generated by Daskalos"

     ^cisloDokladu</body>

<body package="DaskalosUserClasses" selector="cisloDokladu:">cisloDokladu: anObject
"generated by Daskalos"

     cisloDokladu := (self checkValue: anObject forVariable: #cisloDokladu)</body>

<body package="DaskalosUserClasses" selector="datumNarozeni">datumNarozeni
"generated by Daskalos"

     ^datumNarozeni</body>

<body package="DaskalosUserClasses" selector="datumNarozeni:">datumNarozeni: anObject
"generated by Daskalos"

     datumNarozeni := (self checkValue: anObject forVariable: #datumNarozeni)</body>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>

<body package="DaskalosUserClasses" selector="stat">stat
"generated by Daskalos"

     ^stat</body>

<body package="DaskalosUserClasses" selector="stat:">stat: anObject
"generated by Daskalos"

     stat := (self checkValue: anObject forVariable: #stat)</body>
</methods>

<methods>
<class-id>Cestujici</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
     datumNarozeni := nil.
     stat := nil.
     cisloDokladu := nil.
</body>
</methods>

<methods>
<class-id>Cestujici</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="celkemUtraceno">celkemUtraceno
	"vypocita, kolik celkem cestujici utratil celkove za letenky"

	| select total |
	total := 0.
	select := (Letenka allInstances select: [:e | e patri = self]) 
				collect: [:t | t cena].
	select do: [:e | total := total + e].
	^total</body>

<body package="DaskalosUserClasses" selector="pocetLetenek">pocetLetenek
	"vypocita celkovy pocet letenek, co si jednotlivi cestujici zakoupili"

	^(Letenka allInstances select: [:e | e patri = self]) size</body>

<body package="DaskalosUserClasses" selector="vek">vek
	"vrati vek osoby (v pripade chybejicich atributu vraci -1)"

	datumNarozeni isNil 
		ifTrue: [^-1]
		ifFalse: [^((Date today subtractDate: datumNarozeni) / 365) truncated]</body>
</methods>


<class>
<name>Letenka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cislo spoj rezervovaneMisto cena patri pocetZavazadel prednostniNastup </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letenka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#prednostniNastup -&gt; Core.Number); add: (#pocetZavazadel -&gt; Core.Number); add: (#rezervovaneMisto -&gt; Core.Object); add: (#spoj -&gt; Core.Object); add: (#patri -&gt; Core.Object); add: (#cislo -&gt; Core.Number); add: (#cena -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Letenka</class-id>
<body>Atributy:
	- cislo = reprezentuje jakýsi unikátní identifikátor pro letenku, každá letenka by měla mít nějaké unikátní id
	- cena
	- pocetZavazadel = kolik zavazadel (nemyslím tím příruční zavazadla) má cestující zaplaceno
	- prednostniNastup = zda letenka opravňuje cestujícího k přednostnímu nástupu, obsahuje buď ano nebo ne
	- patri = odkaz na cestujiciho
	- rezervovanemMisto = odkaz na sedadlo
	- spoj = odkaz na let
Metody:
	- pristupDoSalonku - pokud letenka byla drazsi nez 5000 a sedadlo neni v economy tride, ma cestujici narok na pristup do VIP salonku pred odletem</body>
</comment>

<methods>
<class-id>Letenka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cena">cena
"generated by Daskalos"

     ^cena</body>

<body package="DaskalosUserClasses" selector="cena:">cena: anObject
"generated by Daskalos"

     cena := (self checkValue: anObject forVariable: #cena)</body>

<body package="DaskalosUserClasses" selector="cislo">cislo
"generated by Daskalos"

     ^cislo</body>

<body package="DaskalosUserClasses" selector="cislo:">cislo: anObject
"generated by Daskalos"

     cislo := (self checkValue: anObject forVariable: #cislo)</body>

<body package="DaskalosUserClasses" selector="patri">patri
"generated by Daskalos"

     ^patri</body>

<body package="DaskalosUserClasses" selector="patri:">patri: anObject
"generated by Daskalos"

     patri := (self checkValue: anObject forVariable: #patri)</body>

<body package="DaskalosUserClasses" selector="pocetZavazadel">pocetZavazadel
"generated by Daskalos"

     ^pocetZavazadel</body>

<body package="DaskalosUserClasses" selector="pocetZavazadel:">pocetZavazadel: anObject
"generated by Daskalos"

     pocetZavazadel := (self checkValue: anObject forVariable: #pocetZavazadel)</body>

<body package="DaskalosUserClasses" selector="prednostniNastup">prednostniNastup
"generated by Daskalos"

     ^prednostniNastup</body>

<body package="DaskalosUserClasses" selector="prednostniNastup:">prednostniNastup: anObject
"generated by Daskalos"

     prednostniNastup := (self checkValue: anObject forVariable: #prednostniNastup)</body>

<body package="DaskalosUserClasses" selector="rezervovaneMisto">rezervovaneMisto
"generated by Daskalos"

     ^rezervovaneMisto</body>

<body package="DaskalosUserClasses" selector="rezervovaneMisto:">rezervovaneMisto: anObject
"generated by Daskalos"

     rezervovaneMisto := (self checkValue: anObject forVariable: #rezervovaneMisto)</body>

<body package="DaskalosUserClasses" selector="spoj">spoj
"generated by Daskalos"

     ^spoj</body>

<body package="DaskalosUserClasses" selector="spoj:">spoj: anObject
"generated by Daskalos"

     spoj := (self checkValue: anObject forVariable: #spoj)</body>
</methods>

<methods>
<class-id>Letenka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cislo := nil.
     spoj := nil.
     rezervovaneMisto := nil.
     cena := nil.
     patri := nil.
     pocetZavazadel := nil.
     prednostniNastup := nil.
</body>
</methods>

<methods>
<class-id>Letenka</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="pristupDoSalonku">pristupDoSalonku
	"pokud letenka stala vice nez 3000 a neni v economy tride ma cestujici narok na pristup do VIP salonu pred odletem"

	cena &gt;= 5000 &amp; (rezervovaneMisto trida ~= 'economy') 
		ifTrue: [^'ano']
		ifFalse: [^'ne']</body>
</methods>


<class>
<name>Let</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cislo zLetiste naLetiste datumOdletu casOdletu datumPriletu casPriletu zpozdeniMinuty </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Let class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#casPriletu -&gt; Core.Number); add: (#datumOdletu -&gt; Core.Date); add: (#cislo -&gt; Core.Number); add: (#zpozdeniMinuty -&gt; Core.Number); add: (#zLetiste -&gt; Core.Object); add: (#datumPriletu -&gt; Core.Date); add: (#casOdletu -&gt; Core.Number); add: (#naLetiste -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Let</class-id>
<body>Atributy:
	- cislo = unikatní identifikátor letu
	- datumOdletu, casOdletu
	- datumPriletu, casPriletu = u dokončených letů se zde zobrazuje reálný čas a datum, kdy letadlo přistálo a u naplánovaných letů jejich předpokládaný čas příletu
	- zpozdeniMinuty = u dokončených letů v rozmezí od 0 do x, u nedokončených letů je zde hodnota -1
	- zLetiste, naLetiste = odkaz na Letiste
Metody:
	- zpozdeniMinuty = jake je zaznamenane zpozeni, u naplanovanych letu je zde hodnota -1
	- letDokoncen = jestli je zde nejake zaznamenane zpozdeni (0 a více minut), je automaticky jasné, že let byl již dokončen</body>
</comment>

<methods>
<class-id>Let</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="casOdletu">casOdletu
"generated by Daskalos"

     ^casOdletu</body>

<body package="DaskalosUserClasses" selector="casOdletu:">casOdletu: anObject
"generated by Daskalos"

     casOdletu := (self checkValue: anObject forVariable: #casOdletu)</body>

<body package="DaskalosUserClasses" selector="casPriletu">casPriletu
"generated by Daskalos"

     ^casPriletu</body>

<body package="DaskalosUserClasses" selector="casPriletu:">casPriletu: anObject
"generated by Daskalos"

     casPriletu := (self checkValue: anObject forVariable: #casPriletu)</body>

<body package="DaskalosUserClasses" selector="cislo">cislo
"generated by Daskalos"

     ^cislo</body>

<body package="DaskalosUserClasses" selector="cislo:">cislo: anObject
"generated by Daskalos"

     cislo := (self checkValue: anObject forVariable: #cislo)</body>

<body package="DaskalosUserClasses" selector="datumOdletu">datumOdletu
"generated by Daskalos"

     ^datumOdletu</body>

<body package="DaskalosUserClasses" selector="datumOdletu:">datumOdletu: anObject
"generated by Daskalos"

     datumOdletu := (self checkValue: anObject forVariable: #datumOdletu)</body>

<body package="DaskalosUserClasses" selector="datumPriletu">datumPriletu
"generated by Daskalos"

     ^datumPriletu</body>

<body package="DaskalosUserClasses" selector="datumPriletu:">datumPriletu: anObject
"generated by Daskalos"

     datumPriletu := (self checkValue: anObject forVariable: #datumPriletu)</body>

<body package="DaskalosUserClasses" selector="naLetiste">naLetiste
"generated by Daskalos"

     ^naLetiste</body>

<body package="DaskalosUserClasses" selector="naLetiste:">naLetiste: anObject
"generated by Daskalos"

     naLetiste := (self checkValue: anObject forVariable: #naLetiste)</body>

<body package="DaskalosUserClasses" selector="zLetiste">zLetiste
"generated by Daskalos"

     ^zLetiste</body>

<body package="DaskalosUserClasses" selector="zLetiste:">zLetiste: anObject
"generated by Daskalos"

     zLetiste := (self checkValue: anObject forVariable: #zLetiste)</body>

<body package="DaskalosUserClasses" selector="zpozdeniMinuty:">zpozdeniMinuty: anObject
"generated by Daskalos"

     zpozdeniMinuty := (self checkValue: anObject forVariable: #zpozdeniMinuty)</body>
</methods>

<methods>
<class-id>Let</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cislo := nil.
     zLetiste := nil.
     naLetiste := nil.
     datumOdletu := nil.
     casOdletu := nil.
     datumPriletu := nil.
     casPriletu := nil.
     zpozdeniMinuty := nil.
</body>
</methods>

<methods>
<class-id>Let</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="letDokoncen">letDokoncen
	zpozdeniMinuty isNil not ifTrue: [^'ano'] ifFalse: [^'ne']</body>

<body package="DaskalosUserClasses" selector="zpozdeniMinuty">zpozdeniMinuty
	"generated by Daskalos"

	zpozdeniMinuty isNil not ifTrue: [^zpozdeniMinuty] ifFalse: [^'-1']</body>
</methods>


</st-source>
